/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    ListNode result = null;  // to store result list containing sum
        ListNode head = null;
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        else if(l2==null)
            return l1;
        int carry=0;
        
    
        while(l1!=null && l2!=null){// add values from linkedlist till any of them is empty
            int val = l1.val+l2.val+carry;
            carry=val/10; // carry to add in next sum
            val%=10;
            ListNode curr = new ListNode(val);
            pushNode(curr);  //push node at end
            l1=l1.next;
            l2=l2.next;
        }
        while(l1!=null ){  // if l1 is non empty , add its digits to final result linkedlist
            int val = l1.val+carry;
            carry=val/10;
            val%=10;
            ListNode curr = new ListNode(val);
           pushNode(curr);
            l1=l1.next;
        }

        while(l2!=null ){  // if l2 is non empty , add its digits to final result linkedlist
            int val = l2.val+carry;
            carry=val/10;
            val%=10;
            ListNode curr = new ListNode(val);
           pushNode(curr);
            l2=l2.next;
        }
        if(carry==1){  //if carry , then add it to end
            ListNode curr = new ListNode(1);
            pushNode(curr);
        }
        
        return result;
    }

//function to push node at end of linkedlist
private void pushNode(ListNode nodeToPush){
        if(head==null){
                head = result =nodeToPush;
            }else {
                head.next=nodeToPush;
                head =nodeToPush;
            }
    }       
        
}
